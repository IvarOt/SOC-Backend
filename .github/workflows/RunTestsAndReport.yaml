name: Run tests and generate report

on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main']
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Set up ChromeDriver
        uses: nanasess/setup-chromedriver@v2.2.2
          
      - name: Restore
        run: dotnet restore SOC-backend/SOC-backend.sln

      - name: Build
        run: dotnet build SOC-backend/SOC-backend.sln --configuration Release --no-restore

      - name: Run SOC-Backend
        run: dotnet run --project SOC-backend/SOC-backend.api/SOC-backend.api.csproj --configuration Release --no-build &
        env:
          ASPNETCORE_ENVIRONMENT: Testing

      - name: Test
        run: dotnet test SOC-backend/SOC-backend.sln --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory ./test-results --filter "(TestCategory=Unit&TestCategory=Integration)"

      - name: Wait for back-end to be ready
        run: |
          echo "Waiting for back-end to be ready..."
          while ! curl -sSf http://localhost:5113/health; do
            sleep 5
          done
          
      - name: E2E SignUp tests
        run: dotnet test SOC-backend/SOC-backend.sln --filter "TestCategory=E2E-SignUp"

      - name: E2E Login tests
        run: dotnet test SOC-backend/SOC-backend.sln --filter "TestCategory=E2E-Login"

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: /home/runner/work/SOC-Backend/screenshots
          
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: /home/runner/work/SOC-Backend/SOC-Backend/SOC-backend/SOC-backend.test/TestResults/*/coverage.cobertura.xml
          base_commit: ${{ github.event.pull_request.base.sha }}
